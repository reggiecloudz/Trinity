<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Trinity - @ViewData["Title"]</title>

    <!-- Dark mode -->
	<script>
		const storedTheme = localStorage.getItem('theme')
 
		const getPreferredTheme = () => {
			if (storedTheme) {
				return storedTheme
			}
			return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
		}

		const setTheme = function (theme) {
			if (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {
				document.documentElement.setAttribute('data-bs-theme', 'dark')
			} else {
				document.documentElement.setAttribute('data-bs-theme', theme)
			}
		}

		setTheme(getPreferredTheme())

		window.addEventListener('DOMContentLoaded', () => {
		    var el = document.querySelector('.theme-icon-active');
			if(el != 'undefined' && el != null) {
				const showActiveTheme = theme => {
				const activeThemeIcon = document.querySelector('.theme-icon-active use')
				const btnToActive = document.querySelector(`[data-bs-theme-value="${theme}"]`)
				const svgOfActiveBtn = btnToActive.querySelector('.mode-switch use').getAttribute('href')

				document.querySelectorAll('[data-bs-theme-value]').forEach(element => {
					element.classList.remove('active')
				})

				btnToActive.classList.add('active')
				activeThemeIcon.setAttribute('href', svgOfActiveBtn)
			}

			window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
				if (storedTheme !== 'light' || storedTheme !== 'dark') {
					setTheme(getPreferredTheme())
				}
			})

			showActiveTheme(getPreferredTheme())

			document.querySelectorAll('[data-bs-theme-value]')
				.forEach(toggle => {
					toggle.addEventListener('click', () => {
						const theme = toggle.getAttribute('data-bs-theme-value')
						localStorage.setItem('theme', theme)
						setTheme(theme)
						showActiveTheme(theme)
					})
				})

			}
		})
	</script>

    <!-- Favicon -->
	<link rel="shortcut icon" href="~/favicon.ico">

    <!-- Plugins CSS -->
	<link rel="stylesheet" type="text/css" href="~/assets/vendor/font-awesome/css/all.min.css">
	<link rel="stylesheet" type="text/css" href="~/assets/vendor/bootstrap-icons/bootstrap-icons.css">
	<link rel="stylesheet" type="text/css" href="~/assets/vendor/OverlayScrollbars-master/css/OverlayScrollbars.min.css">
    @await RenderSectionAsync("Stylesheets", required: false)

    <!-- Theme CSS -->
	<link rel="stylesheet" type="text/css" href="~/assets/css/style.css">

    <!-- Main CSS -->
    <link rel="stylesheet" type="text/css" href="~/css/main.css" >
    @await RenderSectionAsync("Styles", required: false)
</head>
<body>
	<partial name="_LiveToast" />
	<partial name="_FlashToast" />
    @RenderBody()
	@* @await Component.InvokeAsync("ChatBox") *@

	<script src="~/lib/signalr/signalr.min.js"></script>
	<script src="~/lib/jquery/dist/jquery.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="~/assets/vendor/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
	<script src="~/assets/vendor/OverlayScrollbars-master/js/OverlayScrollbars.min.js"></script>
    @await RenderSectionAsync("JavaScripts", required: false)
    
    <!-- Theme Functions -->
    <script src="~/assets/js/functions.js"></script>
	
	<!--<script src="~/js/site.js"></script> -->
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
